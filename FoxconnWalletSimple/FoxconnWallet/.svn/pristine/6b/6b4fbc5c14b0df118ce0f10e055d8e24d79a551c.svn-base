package com.zeustel.cp.views;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.zeustel.cp.SdkHelper;
import com.zeustel.cp.utils.Constants;
import com.zeustel.cp.utils.Tools;
import com.zeustel.cp_sdk.R;

import java.util.Timer;
import java.util.TimerTask;


/**
 * Created by Do on 2016/2/24.
 */
public class Check extends Backable{
    private Button submit;
    private EditText phoneNoEditText;
    private EditText checkCodeText;
    private TextView sendCodeTextView;

    private Timer timer;
    private TimerTask timerTask;

    private int leftTime = 0;

    public Check(Context context){
        super(context);
        addView();
    }

    private void addView(){
        inflate(getContext(), R.layout.view_check,layout);

        submit = (Button)findViewById(R.id.check_submit);
        phoneNoEditText = (EditText)findViewById(R.id.check_phone);
        checkCodeText = (EditText)findViewById(R.id.check_code);
        sendCodeTextView = (TextView)findViewById(R.id.check_sendcode);

        submit.setOnClickListener(this);
        sendCodeTextView.setOnClickListener(this);

        initData();
    }

    private void initData(){
        setTitle(getResources().getString(R.string.check_title));
    }

    @Override
    public void onClick(View v) {
        super.onClick(v);
        int id = v.getId();
        if(id == R.id.check_submit) {
            submit();
        }else if(id == R.id.check_sendcode){
            sendCode();
        }
    }

    @Override
    public void back() {
        super.back();
        iView.addView(Constants.EXCHANGE_VIEWID);
        close();
    }

    private void submit(){
        if(TextUtils.isEmpty(phoneNoEditText.getText().toString())){
            Tools.tips(getContext(),"请输入手机号");
            phoneNoEditText.requestFocus();
            return;
        }
        
        if(!SdkHelper.checkPhoneno(phoneNoEditText.getText().toString())){
        	Tools.tips(getContext(),"手机号码不正确，请重新输入！");
        	phoneNoEditText.requestFocus();
        	return;
        }

        if(TextUtils.isEmpty(checkCodeText.getText().toString())){
            Tools.tips(getContext(),"请输入验证码");
            checkCodeText.requestFocus();
            return;
        }
        iView.addView(Constants.EXCHANGE_OK_VIEWID);
        close();
    }

    private void sendCode(){
        if(leftTime>0){
            return;
        }
        
        if(!SdkHelper.checkPhoneno(phoneNoEditText.getText().toString())){
        	Tools.tips(getContext(),"手机号码不正确，请重新输入！");
        	phoneNoEditText.requestFocus();
        	return;
        }
        
        Tools.tips(getContext(),"验证码已发送！");
        startTimer();
    }


    private Handler mHandler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what){
                case 1:
                    sendCodeTextView.setText("("+leftTime + "秒)重发");
                    break;
                case 2:
                    sendCodeTextView.setText("获取验证码");
                    break;
            }
        }
    };

    /**
     * 启动定时器
     */
    private void startTimer(){
        if(timer != null){
            timer.cancel();
        }
        if(timerTask!=null){
            timerTask.cancel();
        }
        timer = new Timer();
        leftTime = 60;
        timerTask = new TimerTask() {
            @Override
            public void run() {
                if(leftTime>0){
                    leftTime--;
                    mHandler.sendEmptyMessage(1);
                }else{
                    mHandler.sendEmptyMessage(2);
                }
            }
        };

        timer.schedule(timerTask, 0, 1000);
    }


}
